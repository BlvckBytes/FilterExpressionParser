Digit ::= [0-9]
Letter ::= [A-Za-z]

Long ::= "-"? Digit+ ("e" Digit+)?
Double ::= "-"? Digit* "." Digit+ ("e" "-"? Digit+)?
Literal ::= "true" | "false" | "null"

# Quotes within string literals need to be escaped
String ::= '"' ('\"' | [^"])* '"'

# Identifiers represent fields to be filtered by
Identifier ::= Letter (Digit | Letter | '_' | '.')*

Value := Long
       | Double
       | String
       | Literal
       | Identifier # Fields can be matched on other fields within
                    # the same object as well, not just static values

ComparisonOperator ::= ">"   # Greater than
                     | "<"   # Less than
                     | ">="  # Greater than or equal
                     | "<="  # Less than or equal
                     | "=="  # Equals
                     | "===" # Equals sensitively
                     | "!="  # Not Equals
                     | "!==" # Not Equals sensitively
                     | "?"   # Regex match
                     | "??"  # Regex match sensitively
                     | ">%"  # Starts with
                     | "<%"  # Ends with
                     | "%"   # Contains
                     | "%%"  # Contains fuzzy

DisjunctionExpression ::= ConjunctionExpression ("||" ConjunctionExpression)*
ConjunctionExpression ::= ParenthesesExpression ("&&" ParenthesesExpression)*
ParenthesesExpression ::= ("(" FilterExpression ")") | ComparisonExpression
ComparisonExpression ::= Identifier ComparisonOperator Value
FilterExpression ::= DisjunctionExpression